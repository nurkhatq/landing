// components/demo/AIDemo.tsx
'use client';

import { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Brain, Upload, BarChart3, Lightbulb, TrendingUp, AlertCircle, CheckCircle } from 'lucide-react';
import { Button } from '@/components/ui/Button';
import { Card } from '@/components/ui/Card';
import { Progress } from '@/components/ui/Progress';
import { useDemoStore } from '@/store/useDemoStore';
import { useAppStore } from '@/store/useAppStore';

const mockInsights = [
  {
    type: 'insight' as const,
    title: '–¢—Ä–µ–Ω–¥ –ø—Ä–æ–¥–∞–∂',
    description: '–û–±–Ω–∞—Ä—É–∂–µ–Ω —Ä–æ—Å—Ç –ø—Ä–æ–¥–∞–∂ –Ω–∞ 23% –≤ —Å–µ–≥–º–µ–Ω—Ç–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü',
    priority: 'high' as const,
    impact: '+2.8M ‚Ç∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –ø—Ä–∏–±—ã–ª–∏'
  },
  {
    type: 'insight' as const,
    title: '–ü–æ–≤–µ–¥–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤',
    description: '67% –ø–æ–∫—É–ø–æ–∫ —Å–æ–≤–µ—Ä—à–∞–µ—Ç—Å—è –≤ –≤–µ—á–µ—Ä–Ω–µ–µ –≤—Ä–µ–º—è (18:00-22:00)',
    priority: 'medium' as const,
    impact: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏'
  },
  {
    type: 'recommendation' as const,
    title: '–£–≤–µ–ª–∏—á–∏—Ç—å –∑–∞–∫—É–ø–∫–∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏',
    description: '–°–ø—Ä–æ—Å –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ 45%. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–≤–µ–ª–∏—á–∏—Ç—å –∑–∞–∫—É–ø–∫–∏ –Ω–∞ 30%',
    priority: 'high' as const,
    impact: '+34% –∫ –≤—ã—Ä—É—á–∫–µ'
  },
  {
    type: 'recommendation' as const,
    title: '–î–æ–±–∞–≤–∏—Ç—å –≤–µ—á–µ—Ä–Ω—é—é —Å–º–µ–Ω—É',
    description: '–ü–∏–∫–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –≤–µ—á–µ—Ä–Ω–∏–µ —á–∞—Å—ã',
    priority: 'medium' as const,
    impact: '+18% –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤'
  },
  {
    type: 'metric' as const,
    title: '–£–ø—É—â–µ–Ω–Ω–∞—è –ø—Ä–∏–±—ã–ª—å',
    description: '–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å –ø—Ä–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 2.8M ‚Ç∏',
    priority: 'high' as const,
    impact: '287% ROI –∑–∞ –≥–æ–¥'
  }
];

export const AIDemo = () => {
  const [isAnalyzing, setIsAnalyzing] = useState(false);
  const [currentStep, setCurrentStep] = useState(0);
  const { aiAnalysisResults, aiProgress, setAiResults, setAiProgress, resetDemo } = useDemoStore();
  const { addNotification } = useAppStore();

  const analysisSteps = [
    '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...',
    '–ê–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –ø—Ä–æ–¥–∞–∂...',
    '–ò–∑—É—á–µ–Ω–∏–µ –ø–æ–≤–µ–¥–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤...',
    '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Å–∞–π—Ç–æ–≤...',
    '–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...',
    '–†–∞—Å—á–µ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ ROI...'
  ];

  const runAnalysis = async () => {
    if (isAnalyzing) return;
    
    setIsAnalyzing(true);
    setAiProgress(0);
    setCurrentStep(0);
    resetDemo('ai');

    // Simulate AI analysis process
    for (let i = 0; i < analysisSteps.length; i++) {
      setCurrentStep(i);
      const progress = ((i + 1) / analysisSteps.length) * 100;
      setAiProgress(progress);
      
      await new Promise(resolve => setTimeout(resolve, 1500));
    }

    // Set final results
    setAiResults(mockInsights);
    setIsAnalyzing(false);
    
    addNotification({
      type: 'success',
      message: 'AI –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω! –ù–∞–π–¥–µ–Ω–æ 3 –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–æ—Å—Ç–∞ –±–∏–∑–Ω–µ—Å–∞ –Ω–∞ 2.8M ‚Ç∏.'
    });
  };

  const getPriorityColor = (priority: string) => {
    switch (priority) {
      case 'high':
        return 'text-red-600 bg-red-100 dark:bg-red-900/30';
      case 'medium':
        return 'text-yellow-600 bg-yellow-100 dark:bg-yellow-900/30';
      case 'low':
        return 'text-green-600 bg-green-100 dark:bg-green-900/30';
      default:
        return 'text-gray-600 bg-gray-100 dark:bg-gray-800';
    }
  };

  const getTypeIcon = (type: string) => {
    switch (type) {
      case 'insight':
        return <BarChart3 className="w-5 h-5" />;
      case 'recommendation':
        return <Lightbulb className="w-5 h-5" />;
      case 'metric':
        return <TrendingUp className="w-5 h-5" />;
      default:
        return <AlertCircle className="w-5 h-5" />;
    }
  };

  return (
    <div className="space-y-8">
      {/* Header */}
      <div className="flex flex-col lg:flex-row justify-between items-start lg:items-center gap-6">
        <div>
          <h3 className="text-3xl font-bold mb-2 flex items-center gap-3">
            <div className="w-12 h-12 bg-gradient-to-br from-purple-500 to-pink-600 rounded-xl flex items-center justify-center">
              <Brain className="w-6 h-6 text-white" />
            </div>
            AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö
          </h3>
          <p className="text-gray-600 dark:text-gray-400 text-lg mb-4">
            –£–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ –¥–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ä–æ—Å—Ç–∞ –±–∏–∑–Ω–µ—Å–∞
          </p>
          <div className="flex flex-wrap gap-3">
            <span className="px-3 py-1 bg-red-100 dark:bg-red-900/30 text-red-700 dark:text-red-300 rounded-full text-sm font-medium animate-pulse">
              üî¥ LIVE
            </span>
            <span className="px-3 py-1 bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full text-sm font-medium">
              üß† GPT-4 Powered
            </span>
            <span className="px-3 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full text-sm font-medium">
              üíµ 400,000 ‚Ç∏
            </span>
          </div>
        </div>
        
        <div className="flex gap-3">
          <Button
            onClick={runAnalysis}
            disabled={isAnalyzing}
            loading={isAnalyzing}
            icon={<Brain className="w-4 h-4" />}
            size="lg"
          >
            {isAnalyzing ? '–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é...' : '–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ'}
          </Button>
          <select className="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800">
            <option>–î–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–∂</option>
            <option>–ë–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤</option>
            <option>–°–∫–ª–∞–¥—Å–∫–∏–µ –æ—Å—Ç–∞—Ç–∫–∏</option>
          </select>
        </div>
      </div>

      <div className="grid lg:grid-cols-2 gap-8">
        {/* Data Upload Simulation */}
        <Card className="p-6">
          <h4 className="text-xl font-semibold mb-6 flex items-center gap-2">
            <Upload className="w-5 h-5" />
            –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
          </h4>
          
          <div className="space-y-4">
            {/* Mock uploaded files */}
            <div className="space-y-3">
              <div className="flex items-center justify-between p-3 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                <div className="flex items-center space-x-3">
                  <CheckCircle className="w-5 h-5 text-green-600" />
                  <div>
                    <div className="font-medium text-sm">sales_data_2024.xlsx</div>
                    <div className="text-xs text-gray-500">2.4 MB ‚Ä¢ 15,840 –∑–∞–ø–∏—Å–µ–π</div>
                  </div>
                </div>
                <div className="text-green-600 font-medium text-sm">‚úì –ó–∞–≥—Ä—É–∂–µ–Ω–æ</div>
              </div>
              
              <div className="flex items-center justify-between p-3 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                <div className="flex items-center space-x-3">
                  <CheckCircle className="w-5 h-5 text-green-600" />
                  <div>
                    <div className="font-medium text-sm">customers_database.csv</div>
                    <div className="text-xs text-gray-500">1.8 MB ‚Ä¢ 8,547 –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
                  </div>
                </div>
                <div className="text-green-600 font-medium text-sm">‚úì –ó–∞–≥—Ä—É–∂–µ–Ω–æ</div>
              </div>
              
              <div className="flex items-center justify-between p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-800">
                <div className="flex items-center space-x-3">
                  <div className="w-5 h-5 border-2 border-blue-500 border-t-transparent rounded-full animate-spin" />
                  <div>
                    <div className="font-medium text-sm">inventory_data.json</div>
                    <div className="text-xs text-gray-500">980 KB ‚Ä¢ 1,234 —Ç–æ–≤–∞—Ä–∞</div>
                  </div>
                </div>
                <div className="text-blue-600 font-medium text-sm">–û–±—Ä–∞–±–æ—Ç–∫–∞...</div>
              </div>
            </div>

            {/* Analysis Progress */}
            {isAnalyzing && (
              <div className="mt-6">
                <div className="flex justify-between items-center mb-3">
                  <span className="font-semibold">AI –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö</span>
                  <span className="text-sm text-gray-500">{Math.round(aiProgress)}%</span>
                </div>
                <Progress value={aiProgress} variant="gradient" size="lg" animated />
                
                <div className="mt-3 p-3 bg-purple-50 dark:bg-purple-900/20 rounded-lg">
                  <div className="flex items-center space-x-2">
                    <Brain className="w-4 h-4 text-purple-600 animate-pulse" />
                    <span className="text-sm text-purple-700 dark:text-purple-300">
                      {analysisSteps[currentStep]}
                    </span>
                  </div>
                </div>
              </div>
            )}
          </div>
        </Card>

        {/* AI Analysis Results */}
        <Card className="p-6">
          <h4 className="text-xl font-semibold mb-6 flex items-center gap-2">
            <Brain className="w-5 h-5" />
            –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
          </h4>
          
          <div className="space-y-4 max-h-96 overflow-y-auto">
            <AnimatePresence>
              {aiAnalysisResults.length === 0 && !isAnalyzing && (
                <div className="text-center py-8">
                  <Brain className="w-16 h-16 mx-auto mb-4 opacity-30" />
                  <p className="text-gray-500">–ó–∞–ø—É—Å—Ç–∏—Ç–µ –∞–Ω–∞–ª–∏–∑, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–Ω—Å–∞–π—Ç—ã</p>
                </div>
              )}
              
              {aiAnalysisResults.map((result, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: index * 0.2 }}
                  className="border border-gray-200 dark:border-gray-700 rounded-lg p-4 hover:shadow-md transition-shadow"
                >
                  <div className="flex items-start justify-between mb-3">
                    <div className="flex items-center space-x-2">
                      {getTypeIcon(result.type)}
                      <span className="font-medium">{result.title}</span>
                    </div>
                    <span className={`text-xs px-2 py-1 rounded-full font-medium ${getPriorityColor(result.priority!)}`}>
                      {result.priority === 'high' ? '–í—ã—Å–æ–∫–∏–π' : 
                       result.priority === 'medium' ? '–°—Ä–µ–¥–Ω–∏–π' : '–ù–∏–∑–∫–∏–π'}
                    </span>
                  </div>
                  
                  <p className="text-sm text-gray-600 dark:text-gray-400 mb-3">
                    {result.description}
                  </p>
                  
                  {result.impact && (
                    <div className="bg-green-50 dark:bg-green-900/20 p-2 rounded text-sm">
                      <span className="font-medium text-green-700 dark:text-green-300">
                        üí∞ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª: {result.impact}
                      </span>
                    </div>
                  )}
                </motion.div>
              ))}
            </AnimatePresence>
          </div>
        </Card>
      </div>

      {/* AI Metrics Dashboard */}
      {aiAnalysisResults.length > 0 && (
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.5 }}
        >
          <Card className="p-6 bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20">
            <h4 className="text-xl font-semibold mb-6 text-center">üìä –°–≤–æ–¥–∫–∞ AI –∞–Ω–∞–ª–∏–∑–∞</h4>
            
            <div className="grid md:grid-cols-4 gap-6">
              <div className="text-center">
                <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-cyan-500 rounded-full flex items-center justify-center mx-auto mb-3">
                  <BarChart3 className="w-8 h-8 text-white" />
                </div>
                <div className="text-2xl font-bold text-blue-600 mb-1">5</div>
                <div className="text-sm text-gray-600 dark:text-gray-400">–ò–Ω—Å–∞–π—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–æ</div>
              </div>
              
              <div className="text-center">
                <div className="w-16 h-16 bg-gradient-to-br from-green-500 to-emerald-500 rounded-full flex items-center justify-center mx-auto mb-3">
                  <TrendingUp className="w-8 h-8 text-white" />
                </div>
                <div className="text-2xl font-bold text-green-600 mb-1">2.8M ‚Ç∏</div>
                <div className="text-sm text-gray-600 dark:text-gray-400">–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å</div>
              </div>
              
              <div className="text-center">
                <div className="w-16 h-16 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center mx-auto mb-3">
                  <Lightbulb className="w-8 h-8 text-white" />
                </div>
                <div className="text-2xl font-bold text-purple-600 mb-1">3</div>
                <div className="text-sm text-gray-600 dark:text-gray-400">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</div>
              </div>
              
              <div className="text-center">
                <div className="w-16 h-16 bg-gradient-to-br from-orange-500 to-red-500 rounded-full flex items-center justify-center mx-auto mb-3">
                  <AlertCircle className="w-8 h-8 text-white" />
                </div>
                <div className="text-2xl font-bold text-orange-600 mb-1">287%</div>
                <div className="text-sm text-gray-600 dark:text-gray-400">–ü—Ä–æ–≥–Ω–æ–∑ ROI</div>
              </div>
            </div>
          </Card>
        </motion.div>
      )}
    </div>
  );
};