// components/demo/SocialDemo.tsx
'use client';

import { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Share2, Calendar, Image, Video, MessageSquare, Heart, Users, Send } from 'lucide-react';
import { Button } from '@/components/ui/Button';
import { Card } from '@/components/ui/Card';
import { Progress } from '@/components/ui/Progress';
import { useAppStore } from '@/store/useAppStore';

const socialPlatforms = [
  { name: 'Instagram', icon: 'üì∏', color: 'bg-pink-500', posts: 0 },
  { name: 'Facebook', icon: 'üë•', color: 'bg-blue-600', posts: 0 },
  { name: 'Telegram', icon: '‚úàÔ∏è', color: 'bg-blue-500', posts: 0 },
  { name: 'LinkedIn', icon: 'üíº', color: 'bg-blue-700', posts: 0 },
];

const mockPosts = [
  {
    platform: 'Instagram',
    content: 'üöÄ –ù–æ–≤–æ–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ iPhone 15 Pro! –£—Å–ø–µ–π—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —Å–æ —Å–∫–∏–¥–∫–æ–π 10% –¥–æ –∫–æ–Ω—Ü–∞ –Ω–µ–¥–µ–ª–∏!',
    image: 'üì±',
    engagement: { likes: 247, comments: 23, shares: 12 }
  },
  {
    platform: 'Facebook',
    content: 'üíª MacBook Air M3 —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø—Ä–µ–¥–∑–∞–∫–∞–∑–∞! –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤.',
    image: 'üíª',
    engagement: { likes: 156, comments: 34, shares: 28 }
  },
  {
    platform: 'Telegram',
    content: '‚ö†Ô∏è –°–†–û–ß–ù–û! –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –µ–¥–∏–Ω–∏—Ü AirPods Pro –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Ü–µ–Ω–µ. –£—Å–ø–µ–π—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑!',
    image: 'üéß',
    engagement: { likes: 89, comments: 15, shares: 45 }
  },
  {
    platform: 'LinkedIn',
    content: 'üìà –ö–∞–∫ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–æ–º–æ–≥–ª–∞ –Ω–∞—à–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º —É–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ 340%. –ò–∑—É—á–∞–µ–º –∫–µ–π—Å.',
    image: 'üìä',
    engagement: { likes: 312, comments: 67, shares: 89 }
  }
];

export const SocialDemo = () => {
  const [isPosting, setIsPosting] = useState(false);
  const [platforms, setPlatforms] = useState(socialPlatforms);
  const [currentPost, setCurrentPost] = useState(0);
  const [scheduledPosts, setScheduledPosts] = useState<typeof mockPosts>([]);
  const { addNotification } = useAppStore();

  const startAutoPosting = async () => {
    if (isPosting) return;
    
    setIsPosting(true);
    setScheduledPosts([]);
    setPlatforms(socialPlatforms.map(p => ({ ...p, posts: 0 })));

    for (let i = 0; i < mockPosts.length; i++) {
      const post = mockPosts[i];
      setCurrentPost(i);
      
      // Add to scheduled posts
      setScheduledPosts(prev => [...prev, post]);
      
      // Update platform counter
      setPlatforms(prev => prev.map(p => 
        p.name === post.platform 
          ? { ...p, posts: p.posts + 1 }
          : p
      ));
      
      await new Promise(resolve => setTimeout(resolve, 2000));
    }

    setIsPosting(false);
    addNotification({
      type: 'success',
      message: `–ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω! –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ ${mockPosts.length} –ø–æ—Å—Ç–æ–≤ –≤ ${socialPlatforms.length} —Å–æ—Ü—Å–µ—Ç—è—Ö.`
    });
  };

  return (
    <div className="space-y-8">
      {/* Header */}
      <div className="flex flex-col lg:flex-row justify-between items-start lg:items-center gap-6">
        <div>
          <h3 className="text-3xl font-bold mb-2 flex items-center gap-3">
            <div className="w-12 h-12 bg-gradient-to-br from-pink-500 to-red-600 rounded-xl flex items-center justify-center">
              <Share2 className="w-6 h-6 text-white" />
            </div>
            –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –≤ —Å–æ—Ü—Å–µ—Ç–∏
          </h3>
          <p className="text-gray-600 dark:text-gray-400 text-lg mb-4">
            –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å—Ä–∞–∑—É –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π
          </p>
          <div className="flex flex-wrap gap-3">
            <span className="px-3 py-1 bg-red-100 dark:bg-red-900/30 text-red-700 dark:text-red-300 rounded-full text-sm font-medium animate-pulse">
              üî¥ LIVE
            </span>
            <span className="px-3 py-1 bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full text-sm font-medium">
              üìÖ –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –ø–æ—Å—Ç–∏–Ω–≥
            </span>
            <span className="px-3 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full text-sm font-medium">
              üíµ 250,000 ‚Ç∏
            </span>
          </div>
        </div>
        
        <div className="flex gap-3">
          <Button
            onClick={startAutoPosting}
            disabled={isPosting}
            loading={isPosting}
            icon={<Send className="w-4 h-4" />}
            size="lg"
          >
            {isPosting ? '–ü–æ—Å—Ç–∏–Ω–≥...' : '–ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥'}
          </Button>
          <select className="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800">
            <option>–í—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</option>
            <option>–¢–æ–ª—å–∫–æ Instagram</option>
            <option>–¢–æ–ª—å–∫–æ Facebook</option>
          </select>
        </div>
      </div>

      <div className="grid lg:grid-cols-2 gap-8">
        {/* Social Platforms Status */}
        <Card className="p-6">
          <h4 className="text-xl font-semibold mb-6 flex items-center gap-2">
            üì± –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —Å–æ—Ü—Å–µ—Ç–∏
          </h4>
          
          <div className="space-y-4">
            {platforms.map((platform, index) => (
              <motion.div
                key={platform.name}
                className={`p-4 rounded-xl border-2 transition-all ${
                  platform.posts > 0 
                    ? 'border-green-300 bg-green-50 dark:bg-green-900/20' 
                    : 'border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-800'
                }`}
                animate={platform.posts > 0 ? { scale: [1, 1.02, 1] } : {}}
                transition={{ duration: 0.3 }}
              >
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-3">
                    <div className={`w-10 h-10 ${platform.color} rounded-lg flex items-center justify-center text-white text-lg`}>
                      {platform.icon}
                    </div>
                    <div>
                      <div className="font-semibold">{platform.name}</div>
                      <div className="text-sm text-gray-500">
                        {platform.posts > 0 ? `${platform.posts} –ø–æ—Å—Ç–æ–≤ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ` : '–û–∂–∏–¥–∞–Ω–∏–µ...'}
                      </div>
                    </div>
                  </div>
                  
                  <div className="flex items-center space-x-2">
                    {platform.posts > 0 && (
                      <motion.div
                        initial={{ scale: 0 }}
                        animate={{ scale: 1 }}
                        className="w-6 h-6 bg-green-500 rounded-full flex items-center justify-center"
                      >
                        <span className="text-white text-xs">‚úì</span>
                      </motion.div>
                    )}
                    <div className={`w-3 h-3 rounded-full ${
                      platform.posts > 0 ? 'bg-green-500 animate-pulse' : 'bg-gray-400'
                    }`} />
                  </div>
                </div>
              </motion.div>
            ))}
          </div>

          {/* Posting Progress */}
          {isPosting && (
            <div className="mt-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-xl">
              <div className="flex items-center justify-between mb-2">
                <span className="font-semibold text-blue-700 dark:text-blue-300">
                  –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                </span>
                <span className="text-sm text-blue-600">
                  {currentPost + 1}/{mockPosts.length}
                </span>
              </div>
              <Progress 
                value={(currentPost / mockPosts.length) * 100} 
                variant="gradient" 
                size="md" 
                animated 
              />
            </div>
          )}
        </Card>

        {/* Published Posts */}
        <Card className="p-6">
          <h4 className="text-xl font-semibold mb-6 flex items-center gap-2">
            üìù –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã
          </h4>
          
          <div className="space-y-4 max-h-80 overflow-y-auto">
            <AnimatePresence>
              {scheduledPosts.length === 0 && !isPosting && (
                <div className="text-center py-8">
                  <Calendar className="w-16 h-16 mx-auto mb-4 opacity-30" />
                  <p className="text-gray-500">–ó–∞–ø—É—Å—Ç–∏—Ç–µ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ—Å—Ç—ã</p>
                </div>
              )}
              
              {scheduledPosts.map((post, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, x: -20 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: index * 0.2 }}
                  className="border border-gray-200 dark:border-gray-700 rounded-lg p-4"
                >
                  <div className="flex items-start justify-between mb-3">
                    <div className="flex items-center space-x-2">
                      <span className="text-2xl">{post.image}</span>
                      <span className="font-semibold text-sm bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded">
                        {post.platform}
                      </span>
                    </div>
                    <span className="text-xs text-gray-500">
                      {new Date().toLocaleTimeString('ru-RU')}
                    </span>
                  </div>
                  
                  <p className="text-sm text-gray-700 dark:text-gray-300 mb-3">
                    {post.content}
                  </p>
                  
                  <div className="flex items-center space-x-4 text-xs text-gray-500">
                    <div className="flex items-center space-x-1">
                      <Heart className="w-3 h-3" />
                      <span>{post.engagement.likes}</span>
                    </div>
                    <div className="flex items-center space-x-1">
                      <MessageSquare className="w-3 h-3" />
                      <span>{post.engagement.comments}</span>
                    </div>
                    <div className="flex items-center space-x-1">
                      <Share2 className="w-3 h-3" />
                      <span>{post.engagement.shares}</span>
                    </div>
                  </div>
                </motion.div>
              ))}
            </AnimatePresence>
          </div>
        </Card>
      </div>

      {/* Analytics Dashboard */}
      {scheduledPosts.length > 0 && (
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.5 }}
        >
          <Card className="p-6 bg-gradient-to-br from-pink-50 to-purple-50 dark:from-pink-900/20 dark:to-purple-900/20">
            <h4 className="text-xl font-semibold mb-6 text-center">üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞</h4>
            
            <div className="grid md:grid-cols-4 gap-6">
              <div className="text-center">
                <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-cyan-500 rounded-full flex items-center justify-center mx-auto mb-3">
                  <Send className="w-8 h-8 text-white" />
                </div>
                <div className="text-2xl font-bold text-blue-600 mb-1">{scheduledPosts.length}</div>
                <div className="text-sm text-gray-600 dark:text-gray-400">–ü–æ—Å—Ç–æ–≤ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ</div>
              </div>
              
              <div className="text-center">
                <div className="w-16 h-16 bg-gradient-to-br from-pink-500 to-red-500 rounded-full flex items-center justify-center mx-auto mb-3">
                  <Heart className="w-8 h-8 text-white" />
                </div>
                <div className="text-2xl font-bold text-pink-600 mb-1">
                  {scheduledPosts.reduce((sum, post) => sum + post.engagement.likes, 0)}
                </div>
                <div className="text-sm text-gray-600 dark:text-gray-400">–õ–∞–π–∫–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ</div>
              </div>
              
              <div className="text-center">
                <div className="w-16 h-16 bg-gradient-to-br from-green-500 to-emerald-500 rounded-full flex items-center justify-center mx-auto mb-3">
                  <Users className="w-8 h-8 text-white" />
                </div>
                <div className="text-2xl font-bold text-green-600 mb-1">
                  {scheduledPosts.reduce((sum, post) => sum + post.engagement.shares, 0)}
                </div>
                <div className="text-sm text-gray-600 dark:text-gray-400">–†–µ–ø–æ—Å—Ç–æ–≤</div>
              </div>
              
              <div className="text-center">
                <div className="w-16 h-16 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center mx-auto mb-3">
                  <MessageSquare className="w-8 h-8 text-white" />
                </div>
                <div className="text-2xl font-bold text-purple-600 mb-1">85%</div>
                <div className="text-sm text-gray-600 dark:text-gray-400">–û—Ö–≤–∞—Ç –∞—É–¥–∏—Ç–æ—Ä–∏–∏</div>
              </div>
            </div>
          </Card>
        </motion.div>
      )}
    </div>
  );
};